--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
-- ATMOSPHERE - http://www.atmosphere-eubrazil.eu/
-- 
-- 
-- Trustworthiness Monitoring & Assessment Framework
-- Component: Knowledge - database
-- 
-- Repository: https://github.com/eubr-atmosphere/tma-framework
-- License: https://github.com/eubr-atmosphere/tma-framework/blob/master/LICENSE
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--
-- Raw file as generated by astah. 
-- Check TMA-K_create_database.sql for the normalized MySQL version.
--
--
-- @author Jos√© Pereira <josep@dei.uc.pt>
-- @author Nuno Antunes <nmsa@dei.uc.pt>
-- 
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

DROP TABLE Actuator CASCADE CONSTRAINTS;
CREATE TABLE Actuator (
 actuatorId INT NOT NULL PRIMARY KEY,
 address VARCHAR(1024),
 pubKey VARCHAR(1024)
);


DROP TABLE Probe CASCADE CONSTRAINTS;
CREATE TABLE Probe (
 probeId INT NOT NULL PRIMARY KEY,
 probeName VARCHAR(128),
 password VARCHAR(128),
 salt VARCHAR(128) NOT NULL,
 token VARCHAR(256),
 tokenExpiration TIMESTAMP(6)
);


DROP TABLE QualityModel CASCADE CONSTRAINTS;
CREATE TABLE QualityModel (
 qualityModelId VARCHAR(10) NOT NULL PRIMARY KEY,
 modelName VARCHAR(10)
);


DROP TABLE Resource CASCADE CONSTRAINTS;
CREATE TABLE Resource (
 resourceId INT NOT NULL PRIMARY KEY,
 resourceName VARCHAR(128),
 resourceType VARCHAR(16),
 resourceAddress VARCHAR(1024)
);


DROP TABLE Time CASCADE CONSTRAINTS;
CREATE TABLE Time (
 valueTime TIMESTAMP(6) NOT NULL PRIMARY KEY
);


DROP TABLE Action CASCADE CONSTRAINTS;
CREATE TABLE Action (
 actionId INT NOT NULL PRIMARY KEY,
 actuatorId INT NOT NULL,
 resourceId INT NOT NULL,
 actionName VARCHAR(128)
);


DROP TABLE Configuration CASCADE CONSTRAINTS;
CREATE TABLE Configuration (
 actionId INT NOT NULL,
 keyName VARCHAR(128),
 domain VARCHAR(1024)
);

ALTER TABLE Configuration ADD CONSTRAINT FK_Configuration_0 FOREIGN KEY (actionId) REFERENCES Action (actionId);


DROP TABLE Metric CASCADE CONSTRAINTS;
CREATE TABLE Metric (
 metricId INT NOT NULL,
 qualityModelId VARCHAR(10) NOT NULL,
 normalizationKind VARCHAR(10),
 metricName VARCHAR(10),
 metricAggregationOperator INT,
 threshold DOUBLE PRECISION,
 blockLevel INT
);

ALTER TABLE Metric ADD CONSTRAINT PK_Metric PRIMARY KEY (metricId,qualityModelId);


DROP TABLE MetricData CASCADE CONSTRAINTS;
CREATE TABLE MetricData (
 metricId INT NOT NULL,
 valueTime TIMESTAMP(10) NOT NULL,
 qualityModelId VARCHAR(10) NOT NULL,
 value DOUBLE PRECISION,
 resourceId INT NOT NULL
);

ALTER TABLE MetricData ADD CONSTRAINT PK_MetricData PRIMARY KEY (metricId,valueTime,qualityModelId);


DROP TABLE Description CASCADE CONSTRAINTS;
CREATE TABLE Description (
 descriptionId INT NOT NULL PRIMARY KEY,
 dataType CHAR(16),
 descriptionName CHAR(128),
 unit CHAR(16)
);


DROP TABLE MetricComponent CASCADE CONSTRAINTS;
CREATE TABLE MetricComponent (
 descriptionId INT NOT NULL,
 metricId INT NOT NULL,
 qualityModelId VARCHAR(10) NOT NULL,
 attributeAggregationOperator INT,
 numSamples INT,
 weight DOUBLE PRECISION
);

ALTER TABLE MetricComponent ADD CONSTRAINT PK_MetricComponent PRIMARY KEY (descriptionId,metricId,qualityModelId);


DROP TABLE Data CASCADE CONSTRAINTS;
CREATE TABLE Data (
 probeId INT NOT NULL,
 descriptionId INT NOT NULL,
 resourceId INT NOT NULL,
 valueTime TIMESTAMP(6) NOT NULL,
 value DOUBLE PRECISION,
 PRIMARY KEY (probeId,descriptionId,resourceId,valueTime),
 FOREIGN KEY (probeId) REFERENCES Probe (probeId),
 FOREIGN KEY (descriptionId) REFERENCES Description (descriptionId),
 FOREIGN KEY (resourceId) REFERENCES Resource (resourceId),
 FOREIGN KEY (valueTime) REFERENCES Time (valueTime)
);


ALTER TABLE Action ADD CONSTRAINT FK_Action_0 FOREIGN KEY (actuatorId) REFERENCES Actuator (actuatorId);
ALTER TABLE Action ADD CONSTRAINT FK_Action_1 FOREIGN KEY (resourceId) REFERENCES Resource (resourceId);


ALTER TABLE Metric ADD CONSTRAINT FK_Metric_0 FOREIGN KEY (qualityModelId) REFERENCES QualityModel (qualityModelId);


ALTER TABLE MetricData ADD CONSTRAINT FK_MetricData_0 FOREIGN KEY (metricId,qualityModelId) REFERENCES Metric (metricId,qualityModelId);
ALTER TABLE MetricData ADD CONSTRAINT FK_MetricData_1 FOREIGN KEY (resourceId) REFERENCES Resource (resourceId);


ALTER TABLE MetricComponent ADD CONSTRAINT FK_MetricComponent_0 FOREIGN KEY (descriptionId) REFERENCES Description (descriptionId);
ALTER TABLE MetricComponent ADD CONSTRAINT FK_MetricComponent_1 FOREIGN KEY (metricId,qualityModelId) REFERENCES Metric (metricId,qualityModelId);

